namespace sf;
/// this flatbuffer scheme described all basic data structure that needs serialization
struct Vec3d {
    x : float64;
    y : float64;
    z : float64;
}

struct Vec2d {
    x : float64;
    y : float64;
}

struct BoundingBox {
    p_min : Vec3d;
    p_max : Vec3d;
}

struct Vec4d {
    x : float64;
    y : float64;
    z : float64;
    w : float64;
}

struct Matrix44d {
    rows : [Vec4d:4];
}

enum ImageType : ubyte {
    eNone     = 0,
    eFileData = 1,
    eRawData  = 2,
}

enum PixelType : ubyte {
	eNone    = 0,
	eRu8     = 1,
	eRi8     = 2,
	eRu16    = 3,
	eRi16    = 4,
	eRf16    = 5,
	eRu32    = 6,
	eRi32    = 7,
	eRf32    = 8,
	eRGu8    = 9,
	eRGi8    = 10,
	eRGu16   = 11,
	eRGi16   = 12,
	eRGf16   = 13,
	eRGu32   = 14,
	eRGi32   = 15,
	eRGf32   = 16,
	eRGBu8   = 17,
	eRGBi8   = 18,
	eRGBu16  = 19,
	eRGBi16  = 20,
	eRGBf16  = 21,
	eRGBu32  = 22,
	eRGBi32  = 23,
	eRGBf32  = 24,
	eRGBAu8  = 25,
	eRGBAi8  = 26,
	eRGBAu16 = 27,
	eRGBAi16 = 28,
	eRGBAf16 = 29,
	eRGBAu32 = 30,
	eRGBAi32 = 31,
	eRGBAf32 = 32,
}

enum ElementType : ubyte {
	eNone    = 0,
	eXu8     = 1,
	eXi8     = 2,
	eXu16    = 3,
	eXi16    = 4,
	eXf16    = 5,
	eXu32    = 6,
	eXi32    = 7,
	eXf32    = 8,
	eXYu8    = 9,
	eXYi8    = 10,
	eXYu16   = 11,
	eXYi16   = 12,
	eXYf16   = 13,
	eXYu32   = 14,
	eXYi32   = 15,
	eXYf32   = 16,
	eXYZu8   = 17,
	eXYZi8   = 18,
	eXYZu16  = 19,
	eXYZi16  = 20,
	eXYZf16  = 21,
	eXYZu32  = 22,
	eXYZi32  = 23,
	eXYZf32  = 24,
	eXYZWu8  = 25,
	eXYZWi8  = 26,
	eXYZWu16 = 27,
	eXYZWi16 = 28,
	eXYZWf16 = 29,
	eXYZWu32 = 30,
	eXYZWi32 = 31,
	eXYZWf32 = 32,
}
